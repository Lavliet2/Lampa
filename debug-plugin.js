/**
 * –û—Ç–ª–∞–¥–æ—á–Ω—ã–π –ø–ª–∞–≥–∏–Ω –¥–ª—è Lampa
 * –° –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–º–∏ –ø—Ä–æ–≤–µ—Ä–∫–∞–º–∏ –∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ–º
 */

(function () {
    'use strict';

    function startPlugin() {
        window.plugin_debug_ready = true;
        console.log('üîå –û—Ç–ª–∞–¥–æ—á–Ω—ã–π –ø–ª–∞–≥–∏–Ω –∑–∞–≥—Ä—É–∂–µ–Ω');

        function add() {
            console.log('üîß –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –æ—Ç–ª–∞–¥–æ—á–Ω–æ–≥–æ –ø–ª–∞–≥–∏–Ω–∞');
            
            // –ü—Ä–æ—Å—Ç–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
            function testFunction() {
                console.log('‚úÖ –¢–µ—Å—Ç–æ–≤–∞—è —Ñ—É–Ω–∫—Ü–∏—è –≤—ã–∑–≤–∞–Ω–∞');
                Lampa.Noty.show('–û—Ç–ª–∞–¥–æ—á–Ω—ã–π –ø–ª–∞–≥–∏–Ω —Ä–∞–±–æ—Ç–∞–µ—Ç!');
            }

            // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ –≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
            Lampa.Listener.follow('full', function (e) {
                console.log('üì∫ –°–æ–±—ã—Ç–∏–µ full –ø–æ–ª—É—á–µ–Ω–æ:', e.type);
                
                if (e.type == 'complite') {
                    console.log('‚úÖ –§–∏–ª—å–º –∑–∞–≥—Ä—É–∂–µ–Ω, –¥–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É');
                    
                    var button = '<div class="full-start__button view--debug"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="24px" height="24px"><path d="M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2M12,4A8,8 0 0,1 20,12A8,8 0 0,1 12,20A8,8 0 0,1 4,12A8,8 0 0,1 12,4M11,16.5L18,9.5L16.5,8L11,13.5L7.5,10L6,11.5L11,16.5Z" fill="currentColor"/></svg><span>–û—Ç–ª–∞–¥–∫–∞</span></div>';
                    
                    var btn = $(Lampa.Lang.translate(button));
                    console.log('üîò –ö–Ω–æ–ø–∫–∞ —Å–æ–∑–¥–∞–Ω–∞:', btn);
                    
                    btn.on('hover:enter', function () {
                        console.log('üñ±Ô∏è –ö–Ω–æ–ø–∫–∞ –Ω–∞–∂–∞—Ç–∞');
                        testFunction();
                    });
                    
                    if (e.data && e.object) {
                        console.log('üì± –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å');
                        e.object.activity.render().find('.view--debug').last().after(btn);
                    } else {
                        console.log('‚ùå –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–Ω–æ–ø–∫–∏');
                    }
                }
            });

            // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫
            Lampa.SettingsApi.addParam({
                component: 'parser',
                param: {
                    name: 'debug_enabled',
                    type: 'select',
                    value: 'true',
                    default: 'true'
                },
                field: {
                    name: '–í–∫–ª—é—á–∏—Ç—å –æ—Ç–ª–∞–¥–æ—á–Ω—ã–π –ø–ª–∞–≥–∏–Ω',
                    description: '–ü–ª–∞–≥–∏–Ω —Å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –æ—Ç–ª–∞–¥–∫–æ–π –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã'
                },
                onChange: function (value) {
                    console.log('‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ—Ç–ª–∞–¥–æ—á–Ω–æ–≥–æ –ø–ª–∞–≥–∏–Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∞:', value);
                }
            });

            Lampa.Settings.main().update();
            console.log('‚úÖ –û—Ç–ª–∞–¥–æ—á–Ω—ã–π –ø–ª–∞–≥–∏–Ω –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
        }

        if (window.appready) {
            console.log('üöÄ Lampa –≥–æ—Ç–æ–≤–∞, –∑–∞–ø—É—Å–∫–∞–µ–º –ø–ª–∞–≥–∏–Ω');
            add();
        } else {
            console.log('‚è≥ –û–∂–∏–¥–∞–µ–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ Lampa');
            Lampa.Listener.follow('app', function (e) {
                if (e.type == 'ready') {
                    console.log('üöÄ Lampa –≥–æ—Ç–æ–≤–∞, –∑–∞–ø—É—Å–∫–∞–µ–º –ø–ª–∞–≥–∏–Ω');
                    add();
                }
            });
        }
    }

    if (!window.plugin_debug_ready) {
        console.log('üîÑ –ó–∞–ø—É—Å–∫–∞–µ–º –æ—Ç–ª–∞–¥–æ—á–Ω—ã–π –ø–ª–∞–≥–∏–Ω');
        startPlugin();
    } else {
        console.log('‚ö†Ô∏è –û—Ç–ª–∞–¥–æ—á–Ω—ã–π –ø–ª–∞–≥–∏–Ω —É–∂–µ –∑–∞–≥—Ä—É–∂–µ–Ω');
    }

})();
